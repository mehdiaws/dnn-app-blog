{
    "Comment": "Train a model and create an EndPoint in sage while recording all steps in DynamoDB",
    "StartAt": "Mode Choice",
    "States": {
        "Mode Choice": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.Mode",
                    "StringEquals": "HPO",
                    "Next": "HPOFlow"
                }
            ],
            "Default":  "TrainingModelFlow"
        },
        "TrainingModelFlow": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "Create a Model Record",
                    "States": {
                        "Create a Model Record": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:putItem",
                            "Parameters": {
                                "TableName": "${ModelTable}",
                                "Item": {
                                    "trainingId": {
                                        "S.$": "$$.Execution.Id"
                                    },
                                    "created": {
                                        "S.$": "$$.Execution.StartTime"
                                    },
                                    "status": {
                                        "S": "TRAINING_MODEL"
                                    }
                                }
                            },
                            "Next": "Model Training"
                        },
                        "Model Training": {
                            "Resource": "arn:aws:states:::sagemaker:createTrainingJob.sync",
                            "Parameters": {
                                "AlgorithmSpecification.$": "$$.Execution.Input['Training'].AlgorithmSpecification",
                                "OutputDataConfig.$": "$$.Execution.Input['Training'].OutputDataConfig",
                                "StoppingCondition.$": "$$.Execution.Input['Training'].StoppingCondition",
                                "ResourceConfig.$": "$$.Execution.Input['Training'].ResourceConfig",
                                "RoleArn.$": "$$.Execution.Input['Training'].RoleArn",
                                "InputDataConfig.$": "$$.Execution.Input['Training'].InputDataConfig",
                                "HyperParameters.$": "$$.Execution.Input['Training'].HyperParameters",
                                "TrainingJobName.$": "$$.Execution.Input['Training'].TrainingJobName",
                                "DebugHookConfig.$": "$$.Execution.Input['Training'].DebugHookConfig"
                            },
                            "Type": "Task",
                            "Next": "Update Status to CREATING_MODEL"
                        },
                        "Update Status to CREATING_MODEL": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "Parameters": {
                                "TableName": "${ModelTable}",
                                "Key": {
                                    "trainingId": {
                                        "S.$": "$$.Execution.Id"
                                    },
                                    "created": {
                                        "S.$": "$$.Execution.StartTime"
                                    }
                                },
                                "UpdateExpression": "SET #st = :ns, #mo = :out",
                                "ExpressionAttributeNames": {
                                    "#st" : "status",
                                    "#mo" : "modelOutput"
                                },
                                "ExpressionAttributeValues": {
                                    ":ns" : {
                                        "S": "CREATING_MODEL"
                                    },
                                    ":out" : {
                                        "S.$": "$.ModelArtifacts.S3ModelArtifacts"
                                    }
                                }
                            },
                            "ResultPath": null,
                            "Next": "Create Model"
                        },
                        "Create Model": {
                            "Parameters": {
                                "ModelName.$": "$$.Execution.Input['Create Model'].ModelName",
                                "PrimaryContainer": {
                                    "Image.$": "$$.Execution.Input['Create Model']['PrimaryContainer'].Image",
                                    "Environment.$": "$$.Execution.Input['Create Model']['PrimaryContainer'].Environment",
                                    "ModelDataUrl.$": "$.ModelArtifacts.S3ModelArtifacts"
                                },
                                "ExecutionRoleArn.$": "$$.Execution.Input['Create Model'].ExecutionRoleArn"
                            },
                            "Resource": "arn:aws:states:::sagemaker:createModel",
                            "Type": "Task",
                            "Next": "Update Status to CONFIGURING_ENDPOINT"
                        },
                        "Update Status to CONFIGURING_ENDPOINT": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "Parameters": {
                                "TableName": "${ModelTable}",
                                "Key": {
                                    "trainingId": {
                                        "S.$": "$$.Execution.Id"
                                    },
                                    "created": {
                                        "S.$": "$$.Execution.StartTime"
                                    }
                                },
                                "UpdateExpression": "SET #st = :ns, #ma = :name",
                                "ExpressionAttributeNames": {
                                    "#st" : "status",
                                    "#ma" : "modelArn"
                                },
                                "ExpressionAttributeValues": {
                                    ":ns" : {
                                        "S": "CONFIGURING_ENDPOINT"
                                    },
                                    ":name" : {
                                        "S.$": "$.ModelArn"
                                    }
                                }
                            },
                            "ResultPath": "$.taskresult",
                            "Next": "Configure Endpoint"
                        },
                        "Configure Endpoint": {
                            "Resource": "arn:aws:states:::sagemaker:createEndpointConfig",
                            "Parameters": {
                                "EndpointConfigName.$": "$$.Execution.Input['Configure Endpoint'].EndpointConfigName",
                                "ProductionVariants.$": "$$.Execution.Input['Configure Endpoint'].ProductionVariants"
                            },
                            "Type": "Task",
                            "Next": "Update Status to DELETING_OLD_ENDPOINT"
                        },
                        "Update Status to DELETING_OLD_ENDPOINT": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "Parameters": {
                                "TableName": "${ModelTable}",
                                "Key": {
                                    "trainingId": {
                                        "S.$": "$$.Execution.Id"
                                    },
                                    "created": {
                                        "S.$": "$$.Execution.StartTime"
                                    }
                                },
                                "UpdateExpression": "SET #st = :ns",
                                "ExpressionAttributeNames": {
                                    "#st" : "status"
                                },
                                "ExpressionAttributeValues": {
                                    ":ns" : {
                                        "S": "DELETING_OLD_ENDPOINT"
                                    }
                                }
                            },
                            "ResultPath": "$.taskresult",
                            "Next": "Delete Old Endpoint"
                        },
                        "Delete Old Endpoint": {
                            "Type": "Task",
                            "Resource": "${DeleteOldestEndpointFunctionArn}",
                            "Parameters": {
                                "trainingId.$": "$$.Execution.Id",
                                "created.$": "$$.Execution.StartTime"
                            },
                            "ResultPath": "$.taskresult",
                            "Next": "Update Status to DEPLOYING_ENDPOINT"
                        },
                        "Update Status to DEPLOYING_ENDPOINT": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "Parameters": {
                                "TableName": "${ModelTable}",
                                "Key": {
                                    "trainingId": {
                                        "S.$": "$$.Execution.Id"
                                    },
                                    "created": {
                                        "S.$": "$$.Execution.StartTime"
                                    }
                                },
                                "UpdateExpression": "SET #st = :ns, #eca = :cf",
                                "ExpressionAttributeNames": {
                                    "#st" : "status",
                                    "#eca" : "endpointConfigArn"
                                },
                                "ExpressionAttributeValues": {
                                    ":ns" : {
                                        "S": "DEPLOYING_ENDPOINT"
                                    },
                                    ":cf" : {
                                        "S.$": "$.EndpointConfigArn"
                                    }
                                }
                            },
                            "ResultPath": "$.taskresult",
                            "Next": "Deploy"
                        },
                        "Deploy": {
                            "Resource": "arn:aws:states:::sagemaker:createEndpoint",
                            "Parameters": {
                                "EndpointConfigName.$": "$$.Execution.Input['Deploy'].EndpointConfigName",
                                "EndpointName.$": "$$.Execution.Input['Deploy'].EndpointName"
                            },
                            "Type": "Task",
                            "Next": "Wait for Deployment"
                        },
                        "Wait for Deployment": {
                            "Type": "Wait",
                            "Seconds": 30,
                            "Next": "Check Deployment Status"
                        },
                        "Check Deployment Status": {
                            "Type": "Task",
                            "Resource": "${CheckDeploymentStatusFunctionArn}",
                            "ResultPath": "$.is_deployed",
                            "Next":"Is Endpoint Deployed"
                        },
                        "Is Endpoint Deployed": {
                            "Type": "Choice",
                            "Choices": [
                                {
                                    "Variable": "$.is_deployed",
                                    "BooleanEquals": true,
                                    "Next": "Update Status to READY"
                                }
                            ],
                            "Default":  "Wait for Deployment"
                        },
                        "Update Status to READY": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "Parameters": {
                                "TableName": "${ModelTable}",
                                "Key": {
                                    "trainingId": {
                                        "S.$": "$$.Execution.Id"
                                    },
                                    "created": {
                                        "S.$": "$$.Execution.StartTime"
                                    }
                                },
                                "UpdateExpression": "SET #st = :ns, #epa = :ep",
                                "ExpressionAttributeNames": {
                                    "#st" : "status",
                                    "#epa" : "endpointArn"
                                },
                                "ExpressionAttributeValues": {
                                    ":ns" : {
                                        "S": "READY"
                                    },
                                    ":ep" : {
                                        "S.$": "$.EndpointArn"
                                    }
                                }
                            },
                            "ResultPath": "$.taskresult",
                            "End": true
                        }
                    }
                }
            ],
            "Catch": [
                {
                    "ErrorEquals": ["States.ALL"],
                    "Next": "Update Model Training Status to ERROR"
                }
            ],
            "Next": "Job Succeeded"
        },
        "HPOFlow": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "Create a HPO Record",
                    "States": {

                        "Create a HPO Record": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:putItem",
                            "Parameters": {
                                "TableName": "${HPOTable}",
                                "Item": {
                                    "trainingId": {
                                        "S.$": "$$.Execution.Id"
                                    },
                                    "created": {
                                        "S.$": "$$.Execution.StartTime"
                                    },
                                    "status": {
                                        "S": "RUNNING_HPO"
                                    }
                                }
                            },
                            "Next": "Running HPO"
                        },
                        "Running HPO": {
                            "Resource": "arn:aws:states:::sagemaker:createTrainingJob.sync",
                            "Parameters": {
                                "AlgorithmSpecification.$": "$$.Execution.Input['Training'].AlgorithmSpecification",
                                "OutputDataConfig.$": "$$.Execution.Input['Training'].OutputDataConfig",
                                "StoppingCondition.$": "$$.Execution.Input['Training'].StoppingCondition",
                                "ResourceConfig.$": "$$.Execution.Input['Training'].ResourceConfig",
                                "RoleArn.$": "$$.Execution.Input['Training'].RoleArn",
                                "InputDataConfig.$": "$$.Execution.Input['Training'].InputDataConfig",
                                "HyperParameters.$": "$$.Execution.Input['Training'].HyperParameters",
                                "TrainingJobName.$": "$$.Execution.Input['Training'].TrainingJobName",
                                "DebugHookConfig.$": "$$.Execution.Input['Training'].DebugHookConfig"
                            },
                            "Type": "Task",
                            "Next": "Update Status to HPO_COMPLETED"
                        },
                        "Update Status to HPO_COMPLETED": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::dynamodb:updateItem",
                            "Parameters": {
                                "TableName": "${HPOTable}",
                                "Key": {
                                    "trainingId": {
                                        "S.$": "$$.Execution.Id"
                                    },
                                    "created": {
                                        "S.$": "$$.Execution.StartTime"
                                    }
                                },
                                "UpdateExpression": "SET #st = :ns",
                                "ExpressionAttributeNames": {
                                    "#st" : "status"
                                },
                                "ExpressionAttributeValues": {
                                    ":ns" : {
                                        "S": "HPO_COMPLETED"
                                    }
                                }
                            },
                            "ResultPath": "$.taskresult",
                            "End": true
                        }
                    }
                }
            ],
            "Catch": [
                {
                    "ErrorEquals": ["States.ALL"],
                    "Next": "Update HPO status to ERROR"
                }
            ],
            "Next": "Job Succeeded"

        },
        "Update Model Training Status to ERROR": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:updateItem",
            "Parameters": {
                "TableName": "${ModelTable}",
                "Key": {
                    "trainingId": {
                        "S.$": "$$.Execution.Id"
                    },
                    "created": {
                        "S.$": "$$.Execution.StartTime"
                    }
                },
                "UpdateExpression": "SET #st = :ns, #err = :err, #cause = :cause",
                "ExpressionAttributeNames": {
                    "#st" : "status",
                    "#err" : "error",
                    "#cause" : "errorCause"
                },
                "ExpressionAttributeValues": {
                    ":ns" : {
                        "S": "ERROR"
                    },
                    ":err" : {
                        "S.$": "$.Error"
                    },
                    ":cause" : {
                        "S.$": "$.Cause"
                    }
                }
            },
            "ResultPath": null,
            "Next": "Job Fails"
        },
        "Update HPO status to ERROR": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:updateItem",
            "Parameters": {
                "TableName": "${HPOTable}",
                "Key": {
                    "trainingId": {
                        "S.$": "$$.Execution.Id"
                    },
                    "created": {
                        "S.$": "$$.Execution.StartTime"
                    }
                },
                "UpdateExpression": "SET #st = :ns, #err = :err, #cause = :cause",
                "ExpressionAttributeNames": {
                    "#st" : "status",
                    "#err" : "error",
                    "#cause" : "errorCause"
                },
                "ExpressionAttributeValues": {
                    ":ns" : {
                        "S": "ERROR"
                    },
                    ":err" : {
                        "S.$": "$.Error"
                    },
                    ":cause" : {
                        "S.$": "$.Cause"
                    }
                }
            },
            "ResultPath": null,
            "Next": "Job Fails"
        },
        "Job Fails": {
            "Type": "Fail"
        },
        "Job Succeeded": {
            "Type": "Succeed"
        }
    }
}
